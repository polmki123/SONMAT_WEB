<div id="page-start"></div>

<style>
    .message-form-background {
        background: url("../images/message-form-background.jpg") 50% 0px no-repeat;
    }

    .separator {
        background:
                linear-gradient(to right,
                                transparent 0%,
                                rgba(0, 0, 0, 0.2) 25%,
                                transparent 45%,
                                transparent 55%,
                                rgba(0, 0, 0, 0.2) 75%,
                                transparent 100%); !important;
    }

    .note-editable {
        font-size: 20pt !important;
    }
</style>

<section class="main-container section pv-40 fixed-bg dark-translucent-bg message-form-background">

    <div class="container">
        <div class="row">

            <!-- main start -->
            <!-- ================ -->
                <div class="main col-12">
                    <!-- page-title start -->
                    <!-- ================ -->

                    <form class="form-group">

                        <div class="pv-20 ph-20 light-gray-bg hc-item-box bordered hc-shadow animated hc-element-invisible hc-element-visible">

                            <br/>

                            <div class="row">
                                <div class="col-lg-12">
                                    <input type="email" class="form-control" name="inputEmail" placeholder="이메일을 입력하세요">
                                    <div id="email-feedback" class="invalid-feedback" style="display:none;">상대 이메일을 확인해주세요.</div>
                                </div>
                            </div>

                            <br/>

                            <div class="row">
                                <div class="col-lg-12">
                                    <input class="form-control" type="text" name="inputTitle" placeholder="제목을 입력하세요">
                                </div>
                            </div>

                            <div class="separator with-icon"><i class="fa text-default fa-envelope-square"></i></div>

                            <div id="summernote" name="inputContents"></div>

                            <br/>

                            <div class="text-right pull-right">
                                <button type="button" id="upload_btn" class="btn btn-default btn-lg btn-animated margin-clear">전송&nbsp;&nbsp;<i class="fa fa-envelope-o"></i></button>
                            </div>

                            <br/>
                            <br/>

<!--                            <div class="text-right">
                                <button type="button" class="btn btn-success" id="upload_btn"><i class="fa fa-envelope"></i>&nbsp;&nbsp;전송</button>
                            </div>-->
                        </div>
                    </form>
                </div>


            <!-- main end -->

        </div>
    </div>
</section>

<script type="text/javascript">

    // 에디터에 등록할 대표 폰트 리스트
    var main_font_list = <%- JSON.stringify(main_font_list) %>;

    // 실제 사용되는 변형 폰트 리스트
    var variation_font_list = <%- JSON.stringify(variation_font_list) %>;

    // 모든 폰트를 font-face에 등록
    register_font_to_font_face(main_font_list);
    register_font_to_font_face(variation_font_list);

    // 대표 폰트 등록된 summernote 생성
    var editor = init_summertnote(main_font_list);
    var randomFont = getRandomFont();
    editor.summernote('fontName' , randomFont);

    // summernote.keyup event
    $('#summernote').on('summernote.keyup', function(we, e) {

        // enter
        if (e.keyCode == 13) {
            var randomFont = getRandomFont();
            editor.summernote('fontName' , randomFont);
        }

    });




    function register_font_to_font_face(font_list) {
        font_list.forEach(function(font) {
            var font_face = new FontFace(font.font_name, 'url(/api/files/?path=' + font.file_path + ')');

            // 폰트 load
            font_face.load().then(function(loaded_face) {
                // load 된 폰트 추가
                document.fonts.add(loaded_face);
            }).catch(function(error) { });
        });
    }

    function init_summertnote(font_list) {

        var font_name_list = [];
        font_list.forEach(function(font) {
            font_name_list.push(font.font_name);
        });


        return $('#summernote').summernote({
            lang: 'ko-KR',
            placeholder: '당신의 손글씨가 담긴 편지로 마음을 전해보세요',
            tabsize: 2,
            height: 400,
            fontNames: font_name_list,
            fontNamesIgnoreCheck: font_name_list,
            toolbar : false
        });
    }

    function getRandomInt(min, max) {
        min = Math.ceil(min);
        max = Math.floor(max);
        return Math.floor(Math.random() * (max - min + 1)) + min;
    }

    function getRandomFont() {

        var selected_font_list = variation_font_list.slice(0, 3);

        var randomFontIndex = getRandomInt(0 , selected_font_list.length - 1);

        return selected_font_list[randomFontIndex].font_name;
    }







    var is_sendable_state = {
        email: false,
    };

    function getSendableState(){
        var state = true;
        for (var item in is_sendable_state){
            if (is_sendable_state[item] == false) state = false;
        }
        return state;
    }

    // 업로드 버튼 - click event
    $(document).on('click', '#upload_btn', function() {

        if (getSendableState()){
            var formData = {}
            formData.email = $("input[name=inputEmail]").val()
            formData.title = $("input[name=inputTitle]").val()
            formData.contents_html = $("div#summernote").summernote('code');
            formData.contents = $($("#summernote").summernote("code")).text();

            var MESSAGE_POST_UPLOAD_URL = '/api/message';

            function fn_success(sonmat_req_id) {
                window.location.href = "/message/to/" + sonmat_req_id;
            }

            AjaxUtils.postResult(MESSAGE_POST_UPLOAD_URL, formData, fn_success);
        } else {
            if (is_sendable_state.email == false)  $('#email-feedback').css('display', '');
        }
    });


    $(document).on('focusout', 'input[name=inputEmail]', function() {

        var formData = {}
        formData.email = $("input[name=inputEmail]").val()
        var CHECK_EMAIL_URL = '/api/message/check_email';

        function fn_success(user) {
            if (user.name == null){
                // user = {}
                is_sendable_state.email = false;
                $("input[name=inputEmail]").attr('class', 'form-control is-invalid');
            }else{
                // user = { id, name, .... }
                is_sendable_state.email = true;
                $("input[name=inputEmail]").attr('class', 'form-control is-valid');
            }
        }
        AjaxUtils.postResult(CHECK_EMAIL_URL, formData, fn_success);

    });

</script>